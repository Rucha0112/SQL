CREATE DATABASE ASSESSMENT ;
CREATE TABLE CITY (ID INT PRIMARY KEY ,
CITY_NAME VARCHAR(20),
LAT BIGINT ,
LONGG BIGINT ,
COUNTRY_ID BIGINT);
use assessment ;
INSERT INTO CITY (ID,CITY_NAME,LAT,LONGG,COUNTRY_ID)
VALUES (01, 'BERLIN', 52.520008, 13.404954, 1),
(02,'BELGRADE',44.787197,20.457273, 2),
(03, 'ZAGREB',45.815399,15.966568,3),
(04, 'NEW YORK',40.730610, -73.935242,4),
(05,'LOS ANGELES', 34.052235,-118.243683,4),
(06,'WARSAW', 52.237049, 21.017532, 5);
SELECT * FROM CITY ;
USE ASSESSMENT ;
CREATE TABLE CUSTOME (ID INT PRIMARY KEY ,
CUSTOMER_NAME VARCHAR(20),
CITY_ID INT ,
CUSTOMER_ADDRESS VARCHAR(40),
NEXT_CALL_DATE DATE ,
TS_INSERTED TIMESTAMP) ; 
INSERT INTO CUSTOME (ID,CUSTOMER_NAME,CITY_ID,CUSTOMER_ADDRESS,NEXT_CALL_DATE, TS_INSERTED)
VALUES (01,'JWELERY STORE', 4, 'LONG STREET 120', '2020-01-21' , '2020-01-09 14:01:20.000') ,
(02,'BAKERY', 1, 'KURFURSTENDAMM 25', '2020-02-21', '2020-01-09 17:52:15.000') ,
(03,'CAFE', 1,'TAUENTZIENSTRABE 44', '2020-01-21', '2020-01-10 08:02:49.000') ,
(04,'RESTAURANT',3,'ULICA LIPA 15', '2020-01-21', '2020-01-10 09:20:21.000') ;
CREATE TABLE COUNTRIES (ID INT PRIMARY KEY ,
COUNTRY_NAME VARCHAR (40),
COUN_NAME_ENG VARCHAR (50),
COUNTRY_CODE VARCHAR (12)) ;
INSERT INTO COUNTRIES (ID,COUNTRY_NAME,COUN_NAME_ENG,COUNTRY_CODE)
VALUES (01,'DEUTSCHLAND','GERMANY', 'DEU') ,
(02,'SRBIJA', 'SERBIA', 'SRB') ,
(03,'HRVATSKA', 'CROATIA','HRV'),
(04,'UNITED STATES OF AMERICA', 'UNITED STATES OF AMERICA', 'USA'),
(05,'POLSKA', 'POLAND', 'POL'),
(06,'ESPANA', 'SPAIN', 'ESP'),
(07, 'ROSSIYA', 'RUSSIA', 'RUS') ;
SELECT * FROM COUNTRIES ;
SELECT * FROM CUSTOME ;
                                                                   -- TASK 1 ---
-- (join multiple tables using left join) List all Countries and customers related to these countries. For each country displaying its name in English, the name of the city customer is located in as well as the name of the customer.Return even countries without related cities and customers.--															
SELECT CO.COUN_NAME_ENG AS Country_Name_Eng,
CI.CITY_NAME AS City_Name,
C.CUSTOMER_NAME AS Customer_Name FROM COUNTRIES CO
LEFT JOIN CITY CI ON CO.ID = CI.COUNTRY_ID LEFT JOIN CUSTOME C ON CI.ID = C.CITY_ID 
ORDER BY CO.COUN_NAME_ENG, CI.CITY_NAME, C.CUSTOMER_NAME ;
																	-- TASK 2 --
-- (join multiple tables using both left and inner join) Return the list of all countries that have pairs(exclude countries which are not referenced by any city). For such pairs return all customers. Return even pairs of not having a single customer --															
SELECT CO.COUN_NAME_ENG AS Country_Name_Eng,CI.CITY_NAME AS City_Name,C.CUSTOMER_NAME AS Customer_Name
FROM COUNTRIES CO
INNER JOIN CITY CI ON CO.ID = CI.COUNTRY_ID LEFT JOIN CUSTOME C ON CI.ID = C.CITY_ID
ORDER BY CO.COUN_NAME_ENG, CI.CITY_NAME, C.CUSTOMER_NAME;







